{"remainingRequest":"/data/ssd/niklas/workspace/vue-keycloak-auth/node_modules/babel-loader/lib/index.js!/data/ssd/niklas/workspace/vue-keycloak-auth/node_modules/eslint-loader/index.js??ref--13-0!/data/ssd/niklas/workspace/vue-keycloak-auth/src/main.js","dependencies":[{"path":"/data/ssd/niklas/workspace/vue-keycloak-auth/src/main.js","mtime":1633592960720},{"path":"/data/ssd/niklas/workspace/vue-keycloak-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/ssd/niklas/workspace/vue-keycloak-auth/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/ssd/niklas/workspace/vue-keycloak-auth/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICIvZGF0YS9zc2QvbmlrbGFzL3dvcmtzcGFjZS92dWUta2V5Y2xvYWstYXV0aC9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICIvZGF0YS9zc2QvbmlrbGFzL3dvcmtzcGFjZS92dWUta2V5Y2xvYWstYXV0aC9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnByb21pc2UuanMiOwppbXBvcnQgIi9kYXRhL3NzZC9uaWtsYXMvd29ya3NwYWNlL3Z1ZS1rZXljbG9hay1hdXRoL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbi5qcyI7CmltcG9ydCAiL2RhdGEvc3NkL25pa2xhcy93b3Jrc3BhY2UvdnVlLWtleWNsb2FrLWF1dGgvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmZpbmFsbHkuanMiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBBcHAgZnJvbSAnLi9BcHAudnVlJzsKaW1wb3J0IHZ1ZXRpZnkgZnJvbSAnLi9wbHVnaW5zL3Z1ZXRpZnknOwppbXBvcnQgVnVlUm91dGVyIGZyb20gJ3Z1ZS1yb3V0ZXInOwppbXBvcnQgeyByb3V0ZXMgfSBmcm9tICIuL3JvdXRlcyI7CmltcG9ydCBLZXljbG9hayBmcm9tICJrZXljbG9hay1qcyI7CnZhciByb3V0ZXIgPSBuZXcgVnVlUm91dGVyKHsKICByb3V0ZXM6IHJvdXRlcwp9KTsKVnVlLmNvbmZpZy5wcm9kdWN0aW9uVGlwID0gZmFsc2U7ClZ1ZS51c2UoVnVlUm91dGVyKTsgLy9LZXljbG9hayBPcHRpb25zCgp2YXIgaW5pdE9wdGlvbnMgPSB7CiAgdXJsOiAnaHR0cDovLzEyNy4wLjAuMTo4MDgwL2F1dGgnLAogIHJlYWxtOiAndnVlLWtleWNsb2FrJywKICBjbGllbnRJZDogJ2FwcC12dWUnLAogIG9uTG9hZDogJ2xvZ2luLXJlcXVpcmVkJwp9Owp2YXIga2V5Y2xvYWsgPSBLZXljbG9hayhpbml0T3B0aW9ucyk7CmtleWNsb2FrLmluaXQoewogIG9uTG9hZDogaW5pdE9wdGlvbnMub25Mb2FkCn0pLnRoZW4oZnVuY3Rpb24gKGF1dGgpIHsKICBpZiAoIWF1dGgpIHsKICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICB9IGVsc2UgewogICAgY29uc29sZS5sb2coIkF1dGhlbnRpY2F0ZWQiKTsKICAgIG5ldyBWdWUoewogICAgICB2dWV0aWZ5OiB2dWV0aWZ5LAogICAgICByb3V0ZXI6IHJvdXRlciwKICAgICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkgewogICAgICAgIHJldHVybiBoKEFwcCwgewogICAgICAgICAgcHJvcHM6IHsKICAgICAgICAgICAga2V5Y2xvYWs6IGtleWNsb2FrCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0pLiRtb3VudCgnI2FwcCcpOwogIH0gLy9Ub2tlbiBSZWZyZXNoCgoKICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICBrZXljbG9hay51cGRhdGVUb2tlbig3MCkudGhlbihmdW5jdGlvbiAocmVmcmVzaGVkKSB7CiAgICAgIGlmIChyZWZyZXNoZWQpIHsKICAgICAgICBjb25zb2xlLmxvZygnVG9rZW4gcmVmcmVzaGVkJyArIHJlZnJlc2hlZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc29sZS53YXJuKCdUb2tlbiBub3QgcmVmcmVzaGVkLCB2YWxpZCBmb3IgJyArIE1hdGgucm91bmQoa2V5Y2xvYWsudG9rZW5QYXJzZWQuZXhwICsga2V5Y2xvYWsudGltZVNrZXcgLSBuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDApICsgJyBzZWNvbmRzJyk7CiAgICAgIH0KICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHJlZnJlc2ggdG9rZW4nKTsKICAgIH0pOwogIH0sIDYwMDApOwp9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgY29uc29sZS5lcnJvcigiQXV0aGVudGljYXRlZCBGYWlsZWQiKTsKfSk7"},{"version":3,"sources":["/data/ssd/niklas/workspace/vue-keycloak-auth/src/main.js"],"names":["Vue","App","vuetify","VueRouter","routes","Keycloak","router","config","productionTip","use","initOptions","url","realm","clientId","onLoad","keycloak","init","then","auth","window","location","reload","console","log","render","h","props","$mount","setInterval","updateToken","refreshed","warn","Math","round","tokenParsed","exp","timeSkew","Date","getTime","catch","error"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAGA,IAAMC,MAAM,GAAG,IAAIH,SAAJ,CAAc;AAC3BC,EAAAA,MAAM,EAAEA;AADmB,CAAd,CAAf;AAIAJ,GAAG,CAACO,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AACAR,GAAG,CAACS,GAAJ,CAAQN,SAAR,E,CAGA;;AACA,IAAIO,WAAW,GAAG;AAChBC,EAAAA,GAAG,EAAE,4BADW;AAEhBC,EAAAA,KAAK,EAAE,cAFS;AAGhBC,EAAAA,QAAQ,EAAE,SAHM;AAIhBC,EAAAA,MAAM,EAAE;AAJQ,CAAlB;AAOA,IAAIC,QAAQ,GAAGV,QAAQ,CAACK,WAAD,CAAvB;AAEAK,QAAQ,CAACC,IAAT,CAAc;AAAEF,EAAAA,MAAM,EAAEJ,WAAW,CAACI;AAAtB,CAAd,EAA8CG,IAA9C,CAAmD,UAACC,IAAD,EAAU;AAC3D,MAAI,CAACA,IAAL,EAAW;AACTC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAFD,MAEO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,QAAIvB,GAAJ,CAAQ;AACNE,MAAAA,OAAO,EAAPA,OADM;AACGI,MAAAA,MAAM,EAANA,MADH;AAENkB,MAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,eAAIA,CAAC,CAACxB,GAAD,EAAM;AAAEyB,UAAAA,KAAK,EAAE;AAAEX,YAAAA,QAAQ,EAAEA;AAAZ;AAAT,SAAN,CAAL;AAAA;AAFH,KAAR,EAGGY,MAHH,CAGU,MAHV;AAID,GAV0D,CAY7D;;;AACEC,EAAAA,WAAW,CAAC,YAAM;AAChBb,IAAAA,QAAQ,CAACc,WAAT,CAAqB,EAArB,EAAyBZ,IAAzB,CAA8B,UAACa,SAAD,EAAe;AAC3C,UAAIA,SAAJ,EAAe;AACbR,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBO,SAAhC;AACD,OAFD,MAEO;AACLR,QAAAA,OAAO,CAACS,IAAR,CAAa,oCACPC,IAAI,CAACC,KAAL,CAAWlB,QAAQ,CAACmB,WAAT,CAAqBC,GAArB,GAA2BpB,QAAQ,CAACqB,QAApC,GAA+C,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAjF,CADO,GACkF,UAD/F;AAED;AACF,KAPD,EAOGC,KAPH,CAOS,YAAM;AACbjB,MAAAA,OAAO,CAACkB,KAAR,CAAc,yBAAd;AACD,KATD;AAUD,GAXU,EAWR,IAXQ,CAAX;AAaD,CA1BD,EA0BGD,KA1BH,CA0BS,YAAM;AACbjB,EAAAA,OAAO,CAACkB,KAAR,CAAc,sBAAd;AACD,CA5BD","sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport vuetify from './plugins/vuetify'\nimport VueRouter from 'vue-router';\nimport {routes} from \"./routes\";\nimport Keycloak from \"keycloak-js\";\n\n\nconst router = new VueRouter({\n  routes: routes\n})\n\nVue.config.productionTip = false\nVue.use(VueRouter)\n\n\n//Keycloak Options\nlet initOptions = {\n  url: 'http://127.0.0.1:8080/auth',\n  realm: 'vue-keycloak',\n  clientId: 'app-vue',\n  onLoad: 'login-required'\n}\n\nlet keycloak = Keycloak(initOptions);\n\nkeycloak.init({ onLoad: initOptions.onLoad }).then((auth) => {\n  if (!auth) {\n    window.location.reload();\n  } else {\n    console.log(\"Authenticated\");\n\n    new Vue({\n      vuetify, router,\n      render: h => h(App, { props: { keycloak: keycloak } })\n    }).$mount('#app')\n  }\n\n//Token Refresh\n  setInterval(() => {\n    keycloak.updateToken(70).then((refreshed) => {\n      if (refreshed) {\n        console.log('Token refreshed' + refreshed);\n      } else {\n        console.warn('Token not refreshed, valid for '\n            + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n      }\n    }).catch(() => {\n      console.error('Failed to refresh token');\n    });\n  }, 6000)\n\n}).catch(() => {\n  console.error(\"Authenticated Failed\");\n});"]}]}